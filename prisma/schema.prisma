generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Language {
  pt_BR
  en_US

  @@map("languages")
}

enum UserType {
  normal
  admin
  superadmin

  @@map("user_types")
}

enum UserEmailType {
  personal
  work

  @@map("user_email_types")
}

enum UserTelephoneType {
  mobile
  home
  work

  @@map("user_telephone_types")
}

model Business {
  id            String    @id @default(cuid()) @unique
  code          String    @unique
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  deletedAt     DateTime? @map("deleted_at")
  disabledAt    DateTime? @map("disabled_at")

  Users User[]

  @@index([code])
  @@map("businesses")
}

model User {
  id            String    @id @default(cuid()) @unique
  code          String    @unique
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  deletedAt     DateTime? @map("deleted_at")
  disabledAt    DateTime? @map("disabled_at")
  lastLoginAt   DateTime? @map("last_login_at")
  type          UserType  @default(normal)
  firstName     String    @map("first_name")
  lastName      String    @map("last_name")
  username      String
  usernameHash  String    @map("username_hash")
  nationalId    String    @map("national_id")
  nationalIdHash String   @map("national_id_hash")
  passwordHash  String
  birthDate     String?   @map("birth_date")
  avatarUrl     String?   @map("avatar_url")
  language      Language  @default(pt_BR)
  darkMode      Boolean   @default(false) @map("dark_mode")
  isVerified    Boolean   @default(false) @map("is_verified")
  verificationToken String? @map("verification_token")
  resetPasswordToken String? @map("reset_password_token")
  lastPasswordChangeAt DateTime? @map("last_password_change_at")
  twoFactorEnabled Boolean @default(false) @map("two_factor_enabled")

  Business    Business @relation(fields: [businessId], references: [id])
  businessId  String @map("business_id")

  Emails UserEmail[]
  Telephones UserTelephone[]

  @@index([code])
  @@index([firstName])
  @@index([lastName])
  @@index([username])
  @@unique([username, businessId])
  @@map("users")
}

model UserEmail {
  id String @id @default(cuid()) @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  disabledAt DateTime? @map("disabled_at")
  isPrimary Boolean @default(false) @map("is_primary")
  type UserEmailType @default(personal)
  email String
  emailHash String @map("email_hash")
  isVerified Boolean @default(false) @map("is_verified")

  User User @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  @@index([email])
  @@map("user_emails")
}

model UserTelephone {
  id String @id @default(cuid()) @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  disabledAt DateTime? @map("disabled_at")
  isPrimary Boolean @default(false) @map("is_primary")
  type UserTelephoneType @default(mobile)
  telephone String
  telephoneHash String @map("telephone_hash")
  isVerified Boolean @default(false) @map("is_verified")

  User User @relation(fields: [userId], references: [id])
  userId String @map("user_id")

  @@index([telephone])
  @@map("user_telephones")
}
